Cecilias-MBP:bench_testing ceciliazhang$ cargo bench
   Compiling bench_testing v0.1.0 (/Users/ceciliazhang/Projects/LeetCode-Cheatsheet/rust/bench_testing)
warning: unused variable: `a`
  --> benches/benchmark.rs:16:9
   |
16 |     let a = x^99;
   |         ^ help: if this is intentional, prefix it with an underscore: `_a`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: 1 warning emitted

    Finished bench [optimized] target(s) in 8.19s
     Running target/release/deps/bench_testing-3b6aeac8969fbbc0

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out

     Running target/release/deps/benchmark-710b95ca44e943a3
Gnuplot not found, using plotters backend
fib 20                  time:   [18.713 us 18.891 us 19.155 us]                    
                        change: [-26.214% -25.317% -24.170%] (p = 0.00 < 0.10)
                        Performance has improved.
Found 6 outliers among 100 measurements (6.00%)
  3 (3.00%) high mild
  3 (3.00%) high severe

power_bench/1024        time:   [0.0000 ps 0.0000 ps 0.0000 ps]                                      
                        change: [-57.907% -16.495% +74.445%] (p = 0.66 > 0.10)
                        No change in performance detected.
Found 12 outliers among 100 measurements (12.00%)
  4 (4.00%) high mild
  8 (8.00%) high severe

My Group/Bench 1        time:   [319.81 ps 323.88 ps 330.52 ps]                             
Found 5 outliers among 100 measurements (5.00%)
  3 (3.00%) high mild
  2 (2.00%) high severe
My Group/Bench 2        time:   [318.44 ps 324.08 ps 333.33 ps]                             
Found 4 outliers among 100 measurements (4.00%)
  1 (1.00%) high mild
  3 (3.00%) high severe

My Second Group/Multiply/0 * 0                                                                             
                        time:   [650.05 ps 659.41 ps 671.12 ps]
Found 12 outliers among 100 measurements (12.00%)
  6 (6.00%) high mild
  6 (6.00%) high severe
My Second Group/Multiply/0 * 1                                                                             
                        time:   [700.90 ps 731.37 ps 768.43 ps]
Found 9 outliers among 100 measurements (9.00%)
  9 (9.00%) high mild
My Second Group/Multiply/0 * 2                                                                             
                        time:   [673.82 ps 686.41 ps 699.74 ps]
Found 4 outliers among 100 measurements (4.00%)
  4 (4.00%) high severe
My Second Group/Multiply/1 * 0                                                                             
                        time:   [640.06 ps 645.37 ps 651.74 ps]
Found 11 outliers among 100 measurements (11.00%)
  4 (4.00%) high mild
  7 (7.00%) high severe
My Second Group/Multiply/1 * 1                                                                             
                        time:   [644.89 ps 648.10 ps 651.47 ps]
Found 15 outliers among 100 measurements (15.00%)
  4 (4.00%) high mild
  11 (11.00%) high severe
My Second Group/Multiply/1 * 2                                                                             
                        time:   [618.68 ps 622.09 ps 626.50 ps]
Found 7 outliers among 100 measurements (7.00%)
  7 (7.00%) high severe
My Second Group/Multiply/2 * 0                                                                             
                        time:   [619.18 ps 624.91 ps 634.81 ps]
Found 11 outliers among 100 measurements (11.00%)
  4 (4.00%) high mild
  7 (7.00%) high severe
My Second Group/Multiply/2 * 1                                                                             
                        time:   [644.85 ps 649.76 ps 656.06 ps]
Found 8 outliers among 100 measurements (8.00%)
  4 (4.00%) high mild
  4 (4.00%) high severe
My Second Group/Multiply/2 * 2                                                                             
                        time:   [632.61 ps 637.71 ps 644.45 ps]
Found 8 outliers among 100 measurements (8.00%)
  4 (4.00%) high mild
  4 (4.00%) high severe

Summation/sum/1024      time:   [1.8840 ns 1.8978 ns 1.9145 ns]                                
                        thrpt:  [534.88 Gelem/s 539.59 Gelem/s 543.53 Gelem/s]
Found 7 outliers among 100 measurements (7.00%)
  5 (5.00%) high mild
  2 (2.00%) high severe
Summation/fold/1024     time:   [1.9858 ns 2.0466 ns 2.1219 ns]                                 
                        thrpt:  [482.58 Gelem/s 500.33 Gelem/s 515.65 Gelem/s]
Found 7 outliers among 100 measurements (7.00%)
  2 (2.00%) high mild
  5 (5.00%) high severe
Summation/sum/2048      time:   [1.9230 ns 1.9386 ns 1.9555 ns]                                
                        thrpt:  [1047.3 Gelem/s 1056.4 Gelem/s 1065.0 Gelem/s]
Found 5 outliers among 100 measurements (5.00%)
  2 (2.00%) high mild
  3 (3.00%) high severe
Summation/fold/2048     time:   [2.0843 ns 2.1607 ns 2.2667 ns]                                 
                        thrpt:  [903.51 Gelem/s 947.82 Gelem/s 982.61 Gelem/s]
Found 18 outliers among 100 measurements (18.00%)
  7 (7.00%) high mild
  11 (11.00%) high severe
Summation/sum/4096      time:   [1.9889 ns 2.0324 ns 2.0841 ns]                                
                        thrpt:  [1965.3 Gelem/s 2015.4 Gelem/s 2059.4 Gelem/s]
Found 5 outliers among 100 measurements (5.00%)
  2 (2.00%) high mild
  3 (3.00%) high severe
Summation/fold/4096     time:   [1.9593 ns 1.9682 ns 1.9773 ns]                                 
                        thrpt:  [2071.5 Gelem/s 2081.1 Gelem/s 2090.5 Gelem/s]
Found 5 outliers among 100 measurements (5.00%)
  1 (1.00%) low mild
  2 (2.00%) high mild
  2 (2.00%) high severe







// #![feature(test)]
#![allow(non_snake_case)]


extern crate test;
extern crate num_bigint_dig;

use std::io::{self, BufReader, BufRead};
use std::fs::File;
use rand::prelude::*;
use num_bigint_dig::BigUint;
use num_bigint_dig::IntoBigUint;

use u64_impl::bigInt_wrapper;
use u64_impl::bench::*;

// //Banchmark Example
// pub fn add_two(a: i32) -> i32 {
//     a + 2
// }


// #[cfg(test)]
// mod tests {

//     use super::*;
//     use test::Bencher;

//     #[test]
//     fn it_works() {
//         assert_eq!(4, add_two(2));
//     }

//     #[bench]
//     fn bench_add_two(b: &mut Bencher) {
//         b.iter(|| add_two(2));
//     }

//     #[bench]
//     fn bench_ntt(b: &mut Bencher) {
//         b.iter(||{
//             let mut rng = thread_rng();
//             let s : u32 = rng.gen_range(0, 1);
//             let mut X: Vec<BigUint> = match s {
//                 0 => read_input_to_BigUint("sample1.txt").unwrap(),
//                 1 => read_input_to_BigUint("sample2.txt").unwrap(),
//                 _ => panic!("Invalid number"),
//             };
//             let prime = X.remove(0);
//             let root = X.remove(1);
//             bigInt_wrapper::transform(&X, &prime, &root);
//         });
//     }

//     #[bench]
//     fn bench_modpow(b: &mut Bencher) {
//         b.iter(|| 
//             test_modpow(4611686018326724609u64.into_biguint().unwrap(),
//                 512usize);
//         );
//     }

// }


